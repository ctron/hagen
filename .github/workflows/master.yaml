name: Master CI

on:
  push:
    branches:
      - master
    tags:
      - 'v*.*.*'

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1

      - name: Cache cargo registry
        uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache cargo index
        uses: actions/cache@v1
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache cargo build
        uses: actions/cache@v1
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}

      - name: Build
        run: cargo build --release

      - name: Store artifact
        uses: actions/upload-artifact@v1
        with:
          name: binary
          path: target/release/hagen

  container:

    runs-on: ubuntu-latest
    needs: build

    steps:
      - uses: actions/checkout@v1

      - name: Download binary
        uses: actions/download-artifact@v1
        with:
          name: binary

      - run: chmod a+x binary/hagen

      - name: Build the container image
        run: |
          docker build . --file .github/workflows/Dockerfile \
            --tag docker.pkg.github.com/${{ github.repository }}/hagen:latest \
            --tag quay.io/ctron/hagen:latest

      - name: Check for release
        if: startsWith(github.ref,'ref/tags/v')
        run: echo ::set-env name=RELEASE_VERSION::$(echo ${GITHUB_REF:10})

      - name: Tag image with release tag
        if: env.RELEASE_VERSION
        run: |
          docker tag quay.io/ctron/hagen:latest quay.io/ctron/hagen:${RELEASE_VERSION}
          docker tag quay.io/ctron/hagen:latest docker.pkg.github.com/${{ github.repository }}/hagen:${RELEASE_VERSION}

      - name: Login to quay.io
        run: docker login -u "${{ secrets.QUAY_IO_USERNAME }}" -p "${{ secrets.QUAY_IO_PASSWORD }}" quay.io

      - name: Push to quay.io
        run: docker push quay.io/ctron/hagen:latest

      # Unfortunately the GitHub docker registry requires a sign-in, even for public repositories
      - name: Login to github container repository
        run: docker login -u ctron -p ${{ secrets.GITHUB_TOKEN }} docker.pkg.github.com

      - name: Push to github container repository
        run: docker push docker.pkg.github.com/${{ github.repository }}/hagen:latest


  website:

    runs-on: ubuntu-latest
    needs: build

    steps:

      - name: Checkout source
        uses: actions/checkout@v2
        with:
          path: master

      - name: Checkout current pages
        uses: actions/checkout@v2
        with:
          ref: gh-pages
          path: pages

      - run: |
          cd "$GITHUB_WORKSPACE/pages"
          git config user.name "GitHub Actions" && git config user.email "actions@users.noreply.github.com"

      - name: Download binary
        uses: actions/download-artifact@v1
        with:
          name: binary

      - run: sudo mv binary/hagen /usr/local/bin/hagen
      - run: chmod a+x /usr/local/bin/hagen

      - run: env
      - run: which hagen

      - name: Build content
        run: |
          cd master/website
          make build

      - name: Update content
        run: |
          cd "$GITHUB_WORKSPACE/pages"
          rm * -Rf
          cp -a "$GITHUB_WORKSPACE"/master/website/output/* .
          git add -A
          if ! git diff --cached --exit-code; then
            echo "Changes have been detected, publishing to repo."
            git commit -m "Build ${GITHUB_WORKFLOW} for ${GITHUB_SHA}"
            git log --graph --abbrev-commit --date=relative -n 5
            git push origin
          else
            echo "No changes have been detected since last build, nothing to publish"
          fi

      - name: Request Github Pages build job
        run: |
          curl -L -X POST \
          -H "Content-Type: application/json" \
          -H "Authorization: token ${{ secrets.GH_PAGES_TOKEN }}" \
          "https://api.github.com/repos/${{ github.repository }}/pages/builds"
