on:
  push:
    tags:
      - 'v*'

name: Publish release

jobs:

  build:

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            suffix: "-linux-amd64"
          - os: macos-latest
            suffix: "-macos-amd64"
          - os: windows-latest
            suffix: "-windows-amd64"
            exe: ".exe"

    steps:
      - uses: actions/checkout@v2

      - name: Cache cargo registry
        uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache cargo index
        uses: actions/cache@v1
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache cargo build
        uses: actions/cache@v1
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}

      - name: Build
        run: cargo build --verbose

      - name: Run tests
        run: cargo test --verbose

      - name: Store artifact
        uses: actions/upload-artifact@v1
        with:
          name: binary-${{ matrix.suffix }}
          path: target/release/hagen${{ matrix.exe }}

  publish:

    name: Perform release
    runs-on: ubuntu-latest
    needs: build

    steps:

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Download binary
        uses: actions/download-artifact@v1
        with:
          name: binary-linux-amd64
          path: linux-amd64

      - name: Download binary
        uses: actions/download-artifact@v1
        with:
          name: binary-macos-amd64
          path: macos-amd64

      - name: Download binary
        uses: actions/download-artifact@v1
        with:
          name: binary-windows-amd64
          path: windows-amd64

      - name: Upload Release Assets (linux-amd64)
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./linux-amd64/hagen
          asset_name: hagen-linux-amd64
          asset_content_type: application/octet-stream

      - name: Upload Release Assets (macos-amd64)
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./macos-amd64/hagen
          asset_name: hagen-macos-amd64
          asset_content_type: application/octet-stream

      - name: Upload Release Assets (windows-amd64)
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./windows-amd64/hagen.exe
          asset_name: hagen-windows-amd64
          asset_content_type: application/octet-stream
